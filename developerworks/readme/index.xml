<?xml-stylesheet type="text/xsl" href="..\xsl\5.2\dw-document-html-5.2.xsl""?>
<dw-document xmlns:dw="http://www.ibm.com/developerWorks/" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:noNamespaceSchemaLocation="..\schema\5.2\dw-document-5.2.xsd">

	<dw-article skill-level="1" local-site="worldwide">
	<id cma-id="90785"/>
	<keywords content="author, guideline, write, writing, article, xml, html, template, paper, compose, generate,  publish"/>

	<meta-last-updated year="2005" month="10" day="25" initials="gemoore@us.ibm.com"/>

	<content-area-primary name="xml"/>
	
	<title>Authoring with the developerWorks XML templates</title>		

	<subtitle>A step-by-step guide for authors to create articles and tutorials for publication on developerWorks</subtitle>

	<target-content-file
		filename="author-package-v5.2-20051024.zip"
		file-type="zip"
		size="485 KB"
		file-description="IBM developerWorks author package, V5.2"
		link-method-ftp="yes"
		url-ftp="ftp://www6.software.ibm.com/software/developer/library/i-dwauthors52/author-package-v5.2-20051024.zip"
		link-method-http="no"
		link-method-dd="no"
		show-license="yes"
		url-license="ilan.jsp"
		target-content-type="Code sample"
		registration-required="no"/>
	<author email="dwinfo@us.ibm.com" jobtitle="developerWorks">
		<bio>This content is brought to you by the developerWorks editorial staff.</bio>
		<name>Editorial staff</name>
		<company-name>IBM</company-name>
	</author>

	<date-published month="02" year="2005" day="10"/>

	<date-updated month="10" year="2005" day="24"/>

	<abstract>Welcome, authors! This article shows you how to prepare technical articles and tutorials for publication on developerWorks. The steps are simple. You download our XML-based template for articles or for tutorials, fill in the template using any validating XML editor or your preferred Microsoft Windows or Linux text editor, check it to ensure it follows the tagging structure as defined in the developerWorks schema, and preview your article or tutorial. Tips for composing your content and submitting it to the developerWorks staff are also included.</abstract>

	<abstract-extended>Welcome, authors! This article shows you how to prepare technical articles and tutorials for publication on developerWorks. The steps are simple. You download our XML-based template for articles or for tutorials, fill in the template using any validating XML editor or your preferred Microsoft<reg/> Windows<reg/> or Linux<reg/> text editor, check it to ensure it follows the tagging structure as defined in the developerWorks schema, and preview your article or tutorial. Tips for composing your content and submitting it to the developerWorks staff are also included.</abstract-extended>


	<docbody>    
     <heading refname="start" toc="yes" type="major">Getting started</heading>     
			
	<p>The editors at developerWorks look forward to
	working with you to publish your content.  Please be sure you
	have presented your idea to an editor and have
	obtained his or her approval to proceed before using these
	instructions. If you haven&apos;t already,
	you can use our 
	<a href="https://www-130.ibm.com/developerworks/secure/myideas.jsp?start=true&amp;domain=">content 
	submission form</a> to submit your idea.</p>

	<p>Articles and tutorials are published on developerWorks in HTML format, 
	but are written using XML (Extensible Markup Language) format.  
	Prior to publication, the XML source of each article and tutorial is validated for 
	acceptable markup as defined in the developerWorks schema and then
	transformed into the HTML for publication using an XSLT 
	(Extensible Stylesheet Language for Transformations) stylesheet. 
	This separation of article content from presentation details 
	helps us use automated processes to manage our large site.</p>	
	
	<p>The authoring approaches we offer do not require specialized skills.
	If you are familiar with XML or HTML already, you&apos;ll find our
	article and tutorial templates easy to use. If not, you can get acquainted with XML 
	by reading the <a href="#composing">composition tips</a> later 
	in these instructions, and by browsing the <a href="http://www.ibm.com/developerworks/xml/newto/index.html">
	New to XML</a> page on the <a href="http://www.ibm.com/developerworks/xml/">
	developerWorks XML zone</a>.
	</p>
	
<!--	
<p>To authors using <b>Windows and Internet Explorer</b>:
     <br />Follow the instructions in this article, and optionally, the instructions in 
     the companion article 
     &quot;<a href="http://www.ibm.com/developerworks/library/i-dwauthors-tools">Using 
     the developerWorks XML validation tools</a>.&quot;</p>

	<p>To authors using <b>Linux or a browser other than Internet Explorer</b>: 
	<br />Follow the instructions in this article, and at Step 3, branch to the 
	companion article 
	&quot;<a href="http://www.ibm.com/developerworks/library/i-dwauthors-tools">Using 
	the developerWorks XML validation tools</a>&quot; and continue with the instructions there.</p>
-->
		
	<heading refname="format" toc="yes" type="major">Article or tutorial?</heading>	
	<p>If you&apos;ve browsed the developerWorks site, you know that articles and 
	tutorials make up the bulk of developerWorks content.  Their format and purpose differ. 
	Your developerWorks editor can help you decide which format better suits your content idea.</p>

	<p><b>Tutorials</b> 
	<ul>
		<li>Tutorials have educational objectives; they teach.  Rather than simply 
		listing steps, tutorials explain why the step is done and how it relates 
		to the overall objective. Tutorials spell out their educational objectives 
		and time to completion (usually less than two hours).  After 
		completing a tutorial, the reader should be able to repeat the 
		learned task independently.</li>
		<li>Tutorials can teach concepts or how to complete tasks.  
		Many tutorials teach both concepts and tasks, and encourage 
		readers to try the tasks while reading. To make it easy to follow 
		along, tutorials often include sample code and advice for setting 
		up the reader&apos;s environment. Tutorials also often chunk 
		content into discrete and manageable tasks that make up the whole.</li>
		<li>Tutorials require registration.</li>
		<li>Tutorials average 20 to 30 pages when printed. And because 
		the task may take an hour or more to complete, many readers print 
		the tutorial PDF for reference during or after the task.</li>
		<li>A tutorial can stand alone or be one part of a multi-part series.</li>			
	</ul>     
	</p> 
	<p><b>Articles</b> 
	<ul>
		<li>Like tutorials, articles often teach, but less overtly than tutorials. 
		Articles don&apos;t spell out their educational objectives or time to 
		completion.</li>
		<li>In addition to instructing readers on a particular task, articles 
		can also introduce new concepts, architectures, or product features. 
		These kinds of articles aim to raise readers&apos; awareness and 
		whet their appetite to learn more (perhaps by taking a developerWorks 
		tutorial!).  Other kinds of articles take a more persuasive tone, where 
		the author shares his or her unique approach, perspective, or experience.  
		And other kinds of articles delve into a new product or technology by 
		interviewing an expert or reviewing current literature on the topic.</li>
		<li>Articles don&apos;t require registration.</li>
		<li>Articles average 10 pages or fewer when printed. Readers 
		generally read article content online.</li>
		<li>Like tutorials, an article can stand alone or be one part of a multi-part 
		series.</li>
	</ul>
	</p>

	<heading refname="steps" toc="yes" type="major">Basic steps</heading>
	<p>Create an article or tutorial by following these steps:
		<ol>
		   <li><b>Download</b> the author package and unzip the file.</li>
			<li><b>Create</b> a folder and XML template for your article or tutorial.</li>
			<li><b>Edit</b> the XML template to add your content,  
			then <b>validate</b> that XML against the schema and correct any errors.</li>
			<li><b>Preview</b> your article or tutorial in a browser 
			to get an idea of how it will appear on developerWorks.</li>
		</ol>
	</p>
	
	<heading refname="getauthor" toc="yes" type="major">Step 1. Download the author
	package</heading>
			
	<p>Download the <a href="#download">author-package.zip</a> file 
	and place it in a suitable location (for example, 
	<code type="inline">C:\</code> on Windows or your home directory on
	Linux). Unzip the file to place all the files in their correct locations.</p>

	<p>The developerworks directory does not have to be located in the 
	root directory or even on the Windows <code type="inline">C:\</code> drive. 
	However, the tools assume the location of files within the developerworks 
	directory and its subdirectories, so please keep the developerworks 
	directory structure and file names as is.
	</p>	
	 
	 <p>After you unzip the file, you should see a developerworks directory 
	 (or folder) containing the following subdirectories:
	<ul>
		<li><b>i</b> -- contains images needed to preview your article or 
		tutorial.</li>

		<li><b>readme</b> -- contains a copy of this article (index.html), 
		as well as the companion article on using alternative tools 
		(tools.html).
		The XML source for both (index.xml and tools.xml) is also included.</li> 

		<li><b>schema</b> -- contains the schema files.  The main schema file 
		is named <b>dw-document-<i>n.n</i>.xsd</b>.  (<i>n.n</i> is the
		level of the developerWorks schema. 5.2 is the schema level at the time
		of writing.)</li>

		<li><b>xsl</b> -- contains the primary stylesheet file 
		<b>dw-document-html-<i>n.n</i>.xsl</b> and
		several secondary stylesheets.</li>

		<li><b>tools</b> -- contains two templates 
		(<b>template-dw-article-5.2.xml</b> and 
		<b>template-dw-tutorial-5.2.xml</b>) as well as some simple tools 
		to help you set up and validate a new article. The java subdirectory contains 
		the source of the Java<trade></trade> programs which are used 
		with the Linux validation and transformation tool, in case you want to 
		modify or rebuild them.</li>
	</ul>
	</p>	

	<p>The files and tools included in the author package are designed for use 
	on Linux or Windows.
	If you need assistance editing the templates using an operating system
	other than Windows or Linux, please contact your developerWorks
	editor.</p>  
		
	<heading refname="" toc="yes" type="major">Release notes</heading>	

	<p>Before moving on to Step 2, let&apos;s preview what&apos;s changed 
	in this release.  At the time of this writing, the release level of
	the developerWorks schema and stylesheets is 5.2.  The
	author-package.zip file and this article conform to
	the 5.2 release. You should prepare your article or tutorial using the 5.2 
	schema and stylesheets. If you are using an earlier release of
	the developerWorks schema and stylesheets, you&apos;ll need to
	download the 5.2 author-package.zip file.</p>

	<p>The 5.2 schema and stylesheets were released on 20 Oct 2005, and include 
	only minor changes from the previous version. Tutorials and articles both 
	use the same primary schema (xsd file) and primary stylesheet (xsl file):

	<ul>
		<li>Primary schema: dw-document-5.2.xsd</li>
		<li>Primary stylesheet: dw-document-html-5.2.xsl</li>
	</ul> 
	</p> 

	<p>To sum up the changes in XML coding for authors:</p>

	<ul>
		<li>In articles and tutorials, the maximum length for 
		lines of code in code listings (&lt;code type="section"&gt;) 
		is now extended to 90 characters (it was 70 max.
		characters previously).</li>

		<li>In articles and tutorials, you can code lists (&lt;ul&gt; 
		and &lt;ol&gt;) within blockquotes (&lt;blockquote&gt;).</li>

		<li>In articles and tutorials, "Workplace" is available as a 
		primary or secondary content area 
		(&lt;content-area-primary name="workplace" /&gt;).</li>

		<li>In tutorials only, you can omit the "Back to top" rule 
		and link at the bottom of the text under a major heading 
		by adding the "back-to-top" attribute 
		(&lt;refname="" type="major" back-to-top="no"&gt;). 
		This should only be required when a heading might 
		overwrite the right column of content viewed in Internet 
		Explorer.</li>

		<li>In tutorials only, the "Document options" section now 
		includes a page count for the PDFs (A4 and letter size).  
		Your developerWorks editor will fill this in prior to 
		publishing the content.</li>
	</ul> 

	 <heading refname="create" toc="yes" type="major">Step 2. Create 
	a new template</heading> 
	
	<p>In this step you&apos;ll set up your own copy of the 
	article or tutorial template using a tool from the author package. 
	This will create a new file, called <b>index.xml</b>, in a 
	separate directory.  It will set up the proper paths and also 
	adjust the template so it works properly in the different operating
	system environments.</p>
	
	<heading refname="wincreate" toc="no" type="minor">Using Microsoft 
	Windows</heading>

	<p>In the developerworks directory, double-click 
	<code type="inline">new-article.vbs</code> to create an
	article or <code type="inline">new-tutorial.vbs</code> to create a
	tutorial.  You may choose any valid name as your folder name.  
	The defaults are <b>my-article</b> and <b>my-tutorial</b>.
	</p>
		
	<figure>
		<heading refname="figure1" toc="no" type="figure">Figure 1. 
		Creating and naming a new article on Windows
		</heading> <img alt="Creating and naming a new article on 
		Windows" height="264" src="winfig01.gif" width="420"></img>
	</figure>
	
	<p>After you click <b>OK</b>, you should see a new folder
	in the developerworks folder. You may need to refresh 
	your view (<b>View &gt; Refresh</b>) to see it. This new folder 
	contains your article or tutorial template (index.xml) and a validation 
	and transformation script (dw-transform.vbs).
	</p>
			
	<heading refname="linuxcreate" toc="no" type="minor">Using Linux</heading> 

	<p>Use the <code type="inline">new-article.sh</code>  or
	<code type="inline">new-tutorial.sh</code> shell script in
	the developerworks directory. 
	(If you&apos;re running the KDE or GNOME desktops, you can run this 
	from a graphical manager, such as Nautilus or Konqueror; otherwise, run 
	the script in a terminal window.) You&apos;ll see a dialog box in which 
	you can enter your new project&apos;s name.You can choose any valid 
	name. The defaults are <b>my-article</b> and <b>my-tutorial</b>. 
	</p>

	<figure>
		<heading refname="figure2" toc="no" type="figure">Figure 2. 
		Creating and naming a new tutorial on Linux
		</heading> <img alt="Creating and naming a new tutorial on 
		Linux" height="286" src="lnxfig01.gif" width="420"></img>
	</figure>
	
	<p>After you select <b>OK</b> (or press <b>Enter</b>),  
	you should see a new folder within the developerworks folder. 
	This new folder contains your article or tutorial template (index.xml) 
	and a validation and transformation script (dw-transform.sh).</p>
	
	<heading refname="edit" toc="yes" type="major">Step 3. Edit and validate 
	your XML</heading>

	<p>You can choose either of two basic methods for editing and validating your XML source.</p>

	<heading refname="" type="minor">Using a validating XML editor</heading>
		
	<p>Using a validating XML editor to edit and validate your XML 
	helps you identify any errors as you go. Many 
	commercial XML editors are on the market 	today for both Windows 
	and Linux. Three examples are Rational<reg /> Web 
	Developer for WebSphere<reg /> Software, &lt;oXygen/&gt;, 
	and Altova XMLSpy (see <a href="#resources">Resources</a> 
	for links to downloads and documentation). 
	All three provide free downloadable trial versions, 
	and we recommend that you read the instructions
	that come with these products to learn how to use them.  All
	the required and supporting files you&apos;ll need to use these
	products, or other commercial XML editors,  to develop your article or 
	tutorial are in the developerWorks 
	<a href="#download">author-package.zip file</a>.</p>
	
	<p>Some free XML editors are also available. 
	Besides the commercial version of XMLSpy mentioned above, 
	Altova has introduced a free Home Edition of XMLSpy.
	In addition, plug-ins are available for the Eclipse
	platform that you can use for preparing XML documents.
	See <a href="#resources">Resources</a> for links.
	</p>
	
	<p>When using a validating XML editor or workbench, 
	keep in mind:</p>

	<ul>
		<li>In the templates, the references to the 
		schema and stylesheet files are <i>relative</i> to your tutorial or article 
		directory. You may need to change the references 
		(<code type="inline">..\schema\5.2\dw-document-5.2.xsd</code> and
		<code type="inline">..\xsl\5.2\dw-document-html-5.2.xsl</code>) 
		to absolute references such as 
		<code type="inline">C:\developerworks\schema\5.2\dw-document-5.2.xsd</code>.
		In some editors, you may have to specify the location of 
		these files through other configuration means.
		</li>
		<li>If you transform your tutorial or article in an XML editor, and none 
		of your images display, it is likely that the editor has created
		the HTML file in a directory used for temporary storage. If so,
		you will need to save the generated HTML file in your article
		directory (my-article, in our example), and open it either in the 
		XML editor GUI or with a browser.
		</li>
	</ul>
	
	<heading refname="" type="minor">Using a text editor and validation tools</heading>

     <p>If you can't find a validating XML editor you like, or prefer 
     not to take the time now to learn how to use one, you can use 
     your preferred text editor to edit the XML template and then use the 
     tools supplied in the author package (<b>dw-transform.vbs</b> for 
     Windows or <b>dw-transform.sh</b> for Linux) to validate your XML 
     and transform it 
     to HTML. You can then preview your HTML in a browser. See the 
     companion article "<a href="http://www.ibm.com/developerworks/library/i-dwauthors-tools/">Using the developerWorks XML validation tools</a>" 
     for details on using these simple tools.
     </p>	
	
	<heading refname="preview" toc="yes" type="major">Step 4. Preview 
	your article or tutorial</heading>	
	
	<p>You can preview your article or tutorial to get a general idea 
	of what the final output will look like.  However, there will be 
	some differences between the previewed version and the 
	final version.  When you preview your tutorial or article, focus 
	on the content and don&apos;t worry about the presentation 
	or style issues.  We will make necessary modifications when 
	we do the final edit.</p>
	
	<p>If you are using a validating XML editor, check the 
	documentation for instructions on how to transform the XML 
	into an HTML file and then view that file with a browser.  
	Some editors have a browser preview option to simplify this step.</p>

	<p>If you are using a text editor and the developerWorks scripts, 
	your output HTML will be created in your article or tutorial folder. 
	Open index.html with a browser. More detailed instructions on 
	using these scripts are in 
	&quot;<a href="http://www.ibm.com/developerworks/library/i-dwauthors-tools">Using 
	the developerWorks XML validation tools</a>&quot;.</p>

	<heading refname="composing" toc="yes" type="major">Composition tips</heading>

	<sidebar><heading refname="quicksumm" type="sidebar">New to XML 
	markup?</heading>
	Like all XML documents, the XML templates in the author package follow these rules:
	<ul>
		<li>XML tags (the strings between &lt; and &gt;) are in lowercase.</li>
		<li>XML tags usually come in a pair: a start tag and a matching end tag. 
		For example, &lt;title&gt; and &lt;/title&gt; are the start and end tags for 
		your article or tutorial title.</li>
		<li>Your content goes between the tags, as in &lt;title&gt;Groovy&apos;s 
		growth spurt&lt;/title&gt;.</li>
		<li>An exception to the tag pairs is a tag such as a line break (&lt;br /&gt;) 
		or an image tag (&lt;img /&gt;), where a single tag serves as both start 
		and end; in this case, the tag ends with /&gt;.</li> 
		<li>Comment lines are surrounded with &lt;!-- and --&gt;.</li>
	</ul>
	</sidebar>	
	
	<p>The XML templates are your best source for
	comprehensive tips on developing your article or tutorial. 
	Extensive comments in the templates (<b>template-dw-article-5.2.xml</b> 
	and <b>template-dw-tutorial-5.2.xml</b> in the
	<b>tools</b> directory) guide you through every aspect
	of coding your article or tutorial.  
	You can also look at the the XML
	source for this article (<b>index.xml</b> in the
	<b>readme</b> directory) as a guide. Here are some
	other tips you might find helpful:</p>

	<ul>
		<li>You can cut and paste from other file formats into
		the XML template. If you cut and paste from a file
		with embedded formatting, such as a Microsoft Word
		file, use your editor&apos;s capabilities to paste
		(or paste special) as text, or save the file as a TXT
		file before you cut and paste from it. Do not cut and
		paste directly from a formatted file such as a Word
		file.<br></br> <br></br> </li>

		<li>Remember to use end tags. For example, every
		paragraph tag (&lt;p&gt;) needs its closing tag
		(&lt;/p&gt;). Also, empty elements like the break tag
		(&lt;br /&gt;) and the image tag (&lt;img /&gt;) need 
		a closing slash.<br></br> <br></br></li>

		<li>Avoid span tags, code font tags, and font
		classes.<br></br> <br></br> </li>

		<li>When including listings of sample code:<br></br> <br></br>
		</li>

		<ul>
			<li>Confine code line lengths to 70
			characters, INCLUDING blank spaces.</li>

			<li>Avoid hardcoding blank spaces or tabs at
			the end of a line of sample code.</li>
			
			<li>Avoid using tabs at the beginning of a
			line of sample code. If you must indent, use blank spaces.</li> 

			<li>Do not use color.  If you want to highlight a portion  
			of your sample code, use bold (&lt;b&gt; and &lt;/b&gt;) 
			instead.<br /> <br /></li>
		</ul>
		
		<li>When providing downloadable sample code, zip the
		code up and send the zip file to your editor separately.<br /> <br />
		</li>

		<li>Create all artwork files, including screen
		captures, as JPG or GIF files, and be sure they do not
		exceed 440 pixels in width. Send the artwork files to your editor. See 
		&quot;<a href="http://www.ibm.com/developerworks/library/i-dwgraphics/">Illustrating 
		your article or tutorial for developerWorks</a>&quot; to learn how to 
		more about how to create and deliver effective graphics.<br /> <br /></li>

		<li>Code special characters as follows:<br /> <br />
		
		<table border="0" cellpadding="0" cellspacing="0" class="data-table-1" 
		summary="Recommended highlighting" width="100%">
		<caption> <em>Table 1. Special characters</em> </caption>
		
		<tr>
			<th>Character</th>
			<th>XML coding</th>
	      </tr>

             <tr>
			<td class="tb-row">Ampersand (&amp;)</td>
			<td>&amp;amp; (Always
			code ampersands as &amp;amp; -- even in
			URLs.)</td>
		</tr>
	  
		<tr class="alt-row">
			<td class="tb-row">Apostrophe (&apos;)</td>
			<td>&amp;apos;</td>
		</tr>

		<tr>
			<td class="tb-row">Greater than sign (&gt;)</td>
			<td>&amp;gt;</td>
		</tr>

		<tr class="alt-row">
			<td class="tb-row">Less than sign (&lt;)</td>
			<td>&amp;lt;</td>
		</tr>
	  
		<tr>
			<td class="tb-row">Quotation mark (&quot;)</td>
			<td>&amp;quot;</td>
		</tr>

		<tr class="alt-row">
			<td class="tb-row">Registered trademark (<reg></reg>)</td>
			<td>&lt;reg/&gt; (Authors can, but don&apos;t need to insert trademark symbols; the developerWorks editorial staff will take care of trademarks.)</td>
		</tr>

		<tr>
			<td class="tb-row">Trademark (<trade></trade>)</td>
			<td>&lt;trade/&gt; (Authors can, but don&apos;t need to insert trademark symbols; the developerWorks editorial staff will take care of trademarks.)</td>
		</tr>
	  
		</table><br />
	
		<p>For example, to include angle brackets in a code section:</p> 

		<code type="section" width="50%">&lt;TABLE border=&quot;0&quot; width=&quot;100%&quot;&gt;</code>
		
		<p>You would code the following in the XML template:<br /> <br />
		<code type="inline">&amp;lt;TABLE border=&quot;0&quot;
		width=&quot;100%&quot;&amp;gt;</code> </p>
		</li>

		<li>And finally, to better see your own content as you develop 
		it (and to endear yourself to your developerWorks editor), remove 
		the 	comment lines from the article file as you become familiar 
		with the tagging.</li>
		
	</ul>
	
	<heading refname="highlighting" toc="yes" type="major">Highlighting 
	conventions</heading>
	
	<p>Not sure what needs &lt;code type=&quot;inline&quot;&gt; 
	tagging and what doesn&apos;t? 
	Do you use italics or quotes for a book title? When should you 
	use bold -- or no highlighting at all? Table 2 shows the 
	highlighting conventions 	recommended for developerWorks 
	articles.</p>

	<table border="0" cellpadding="0" cellspacing="0" class="data-table-1" 
	summary="Recommended highlighting" width="100%">
	<caption><em>Table 2. Recommended highlighting</em></caption>
	<tr>
		<th>Highlighted element</th>
		<th>Recommended highlighting</th>
		<th>Example</th>
	</tr>
        
	<tr>
		<td class="tb-row">&quot;Article titles&quot;</td>
		<td>Quotes</td>
		<td>&quot;Article titles&quot;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><i>Book titles</i></td>
		<td>Italics</td>
		<td>&lt;i&gt;Book titles&lt;/i&gt;</td>
	</tr>
	<tr>
		<td class="tb-row"><code type="inline">C/C++ code</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;C/C++ code&lt;/code&gt;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><code type="inline">Classes</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Classes&lt;/code&gt;</td>
	</tr>
	<tr>
		<td class="tb-row"><code type="section">Code samples</code></td>
		<td>Code section</td>
		<td>&lt;code type=&quot;section&quot;&gt;<br />Code 
		samples<br />&lt;/code&gt;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><code type="inline">Code snippets (less 
		than one line) referenced in text</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Code snippets (less 
		than one line) referenced in text&lt;/code&gt;</td>
	</tr>
	<tr>
		<td class="tb-row"><i>Column or series names</i></td>
		<td>Italics</td>
		<td>&lt;i&gt;Column or series names&lt;/i&gt;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><code type="inline">Command names</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Command names&lt;/code&gt;</td>
	</tr>
	<tr>
		<td class="tb-row">Directory names</td>
		<td>No highlighting</td>
		<td>Directory names</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><i>Emphasis</i></td>
		<td>Italics. For example: &quot;Use <i>that</i> to introduce a restrictive 
		clause. Do <i>not</i> type over ..&quot;</td>
		<td>Use &lt;i&gt;that&lt;/i&gt; to introduce a restrictive clause. Do 
		&lt;i&gt;not&lt;/i&gt; type over ..</td>
	</tr>
	<tr>
		<td class="tb-row"><code type="inline">Exception names</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Exception names&lt;/code&gt;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row">File names</td>
		<td>No highlighting</td>
		<td>File names</td>
	</tr>
	<tr>
		<td class="tb-row"><code type="inline">Function 
		calls</code></td> 
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Function 
		calls&lt;/code&gt;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><b>GUI controls</b></td>
		<td>Bold. For example: &quot;On the Installation menu, click 
		<b>Install a new feature</b> &gt; <b>Finish</b>.&quot;</td>
		<td>On the Installation menu, click &lt;b&gt;Install a new 
		feature&lt;/b&gt; &gt; &lt;b&gt;Finish&lt;/b&gt;.</td>
	</tr>
	<tr>
		<td class="tb-row"><code type="inline">HTML tags or 
		portions</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;HTML tags or 
		portions&lt;/code&gt;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><code type="inline">Interfaces</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Interfaces&lt;/code&gt;</td>
	</tr>
	<tr>
		<td class="tb-row"><code type="inline"> Keywords (such as 
		static)</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt; Keywords (such as 
		static)&lt;/code&gt;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><i>Magazine titles</i></td>
		<td>Italics. For example: &quot;See the related article in 
		<i>LinuxToday</i> ...&quot;.&quot;</td>
		<td>See the related article in &lt;i&gt;LinuxToday&lt;/i&gt; ...</td>
	</tr>
	<tr>
		<td class="tb-row"><code type="inline">Message text or 
		prompts addressed to the user</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Message text or 
		prompts addressed to the user&lt;/code&gt;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><code type="inline">Methods</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Methods&lt;/code&gt;</td>
	</tr>
	<tr>
		<td class="tb-row"><code type="inline">Objects</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Objects&lt;/code&gt;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row">Path names</td>
		<td>No highlighting</td>
		<td>Path names</td>
	</tr>
	<tr>
		<td class="tb-row"><i>Terms defined in context</i></td>
		<td>Italics</td>
		<td>&lt;i&gt;Terms defined in context&lt;/i&gt;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><code type="inline">Text entered by 
		users</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Text entered by 
		users&lt;/code&gt;</td>
	</tr>
	<tr>
		<td class="tb-row">&quot;Tutorial titles&quot;</td>
		<td>Quotes</td>
		<td>&quot;Tutorial titles&quot;</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><code type="inline">Types (such 
		as int or long)</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;Types (such 
		as int or long)&lt;/code&gt;</td>
	</tr>
	<tr>
		<td class="tb-row">URLs</td>
		<td>No highlighting</td>
		<td>URLs</td>
	</tr>
	<tr class="alt-row">
		<td class="tb-row"><i>Variables</i></td>
		<td>Italics. For example: &quot;... where <i>myname</i> 
		represents your user ID...&quot;</td>
		<td>... where &lt;i&gt;myname&lt;/i&gt; 
		represents your user ID...</td>
	</tr>
	<tr>
		<td class="tb-row"><code type="inline">XML tags or 
		portions</code></td>
		<td>Inline code</td>
		<td>&lt;code type=&quot;inline&quot;&gt;XML tags or 
		portions&lt;/code&gt;</td>
	</tr>
	</table>
	
	<heading refname="" toc="yes" type="major">Submitting your 
	article or tutorial to developerWorks</heading>

	<p>Once you&apos;ve finished your masterpiece, you&apos;re 
	ready to send it 	to your developerWorks editor.  E-mail the
	XML file for your article or tutorial  (along with any associated 
	graphics or sample code) to your editor. For detailed guidelines 
	and tips on creating 	and submitting graphics for your article, see 
	&quot;<a href="http://www.ibm.com/developerworks/library/i-dwgraphics/">Illustrating 
	your article or tutorial for developerWorks: Graphic design tips 
	for authors</a>.&quot;
	</p>
	
	<p>If you have any 	questions or problems, please 
	<a href="http://www.ibm.com/developerworks/aboutdw/">contact
	your editor</a> for additional help.</p>
	
	</docbody>

	<resources><resource resource-category="Learn">
	&quot;<a href="http://www.ibm.com/developerworks/library/i-dwauthors-tools">Using 
	the developerWorks XML validation tools</a>&quot; (developerWorks, 
	October 2005):  If you prefer to use a text editor to edit the XML template, 
	you can use the tools supplied with the author package to validate your 
	XML and preview your content.</resource>

	<resource resource-category="Get products and technologies">
	<a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=3144b72b-b4f2-46da-b4b6-c5d7485f2b42&amp;DisplayLang=en">Microsoft's 
	XML Parser (MSXML)</a>: To use the dw-transform.vbs script to 
	transform your article or tutorial, you need the latest version of 
	the MSXML parser. The file you need is msxml.ms.i.
	</resource>

	<resource resource-category="Get products and technologies">
	<a href="http://www-128.ibm.com/developerworks/java/jdk/">IBM 
	Developer Kit for Java, Version 1.4.2</a>: To use the dw-transform.sh script 
	on Linux to transform your article or tutorial, you need the IBM Developer 
	Kit for Java, Version 1.4.2 or later.
	</resource>

	<resource resource-category="Get products and technologies">
	 <a href="http://www.ibm.com/developerworks/downloads/r/rwd/">Rational<reg></reg> Web 
	 Developer for WebSphere<reg></reg> Software V6.0</a>: Download 
	 a trial version directly from developerWorks.
	 </resource>

	<resource resource-category="Get products and technologies">
	<a href="http://www.ibm.com/developerworks/downloads/index.html">IBM 
	trial products for download</a>: Build your next development project with 
	IBM trial software, available for download directly from developerWorks.
	</resource>

	<resource resource-category="Get products and technologies">
	<a href="http://www.garshol.priv.no/download/xmltools/cat_ix.html#SC_XMLEditors">XML 
	Editors</a>: Peruse the list of free XML editors, maintained by Lars Marius Garshol.
	</resource>

	<resource resource-category="Get products and technologies">
	<a href="http://www.oxygenxml.com/">&lt;oXygen/&gt;</a>  XML 
	Editor &amp; XSLT Debugger (for multiple platforms) and 
	<a href="http://www.altova.com">Altova XMLSPY</a> (for Windows): 
	Learn about or download trial versions of other commercial XML products.
	</resource>

	<resource resource-category="Get products and technologies">
	&quot;<a href="http://www.ibm.com/developerworks/library/os-ecxml/">XML 
	development with Eclipse</a>&quot; (developerWorks, April 2003): Create XML 
	documents using the Eclipse platform with plug-ins such as Bocaloco 
	Software&apos;s <a href="http://www.xmlbuddy.com/">XMLBuddy</a>.
	</resource>
			
	<resource resource-category="Learn">
	&quot;<a href="http://www.ibm.com/developerworks/library/i-dwgraphics/">Illustrating 
	your article or tutorial for developerWorks: Graphic design tips for authors</a>.&quot; 
	(developerWorks, September 2005): Get detailed guidelines and tips on creating and 
	submitting graphics for your article or tutorial.
	</resource>

	<resource resource-category="Learn">
	<a href="http://www.ibm.com/developerworks/aboutdw/author.html">developerWorks 
	author guidelines and editorial policy</a>: Learn more about our editorial 
	policy and peek at each developerWorks editor's content wish list.
	</resource>

	<resource resource-category="Discuss">
	<a href="https://www-130.ibm.com/developerworks/secure/myideas.jsp?start=true&amp;domain=">Content 
	submission form</a>: Submit an article or tutorial idea to developerWorks, 
	and start talking with a developerWorks editor. Check to see what 
	content is most desired in the 
	<a href="http://www.ibm.com/developerworks/wishlist/">content wish list</a>.
	</resource>

	<resource resource-category="Discuss">
	<a href="http://www.ibm.com/developerworks/aboutdw/contacts.html">developerWorks 
	editor contact info</a>: If you have questions, contact the editor for 
	the technology or product zone you&apos;re interested in.
	</resource>

	</resources>

	</dw-article>
</dw-document>








