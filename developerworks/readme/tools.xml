<!-- Switch to forward slashes (/) if transforming on Linux -->
<?xml-stylesheet type="text/xsl" href="..\xsl\5.2\dw-document-html-5.2.xsl""?>
<dw-document xmlns:dw="http://www.ibm.com/developerWorks/" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:noNamespaceSchemaLocation="..\schema\5.2\dw-document-5.2.xsd">

	<dw-article skill-level="1" local-site="worldwide">
	<id cma-id="90784"/>
	<keywords content="authoring, validate, editor, tool, author, guideline, write, writing, article, xml, html, template, paper, compose, generate,  publish"/>

	<meta-last-updated year="2005" month="10" day="25" initials="gemoore@us.ibm.com"/>

	<content-area-primary name="xml"/>

	<title>Using the developerWorks XML validation tools</title>		

	<subtitle>Optional tools for authors creating articles and tutorials for publication on developerWorks</subtitle>

	<author email="ishields@us.ibm.com" jobtitle="Senior Programmer">
		<bio>Ian Shields works on a multitude of Linux projects for the developerWorks Linux zone.  
		He is  a Senior Programmer at IBM at the Research Triangle Park, NC. He joined IBM in 
		Canberra, Australia, as a Systems Engineer in 1973, and has since worked on 
		communications systems and pervasive computing in Montreal, Canada, 
		and RTP, NC. He has several patents. His undergraduate degree is in 
		pure mathematics and philosophy from the Australian National University. 
		He has an M.S. and Ph.D. in computer science from North Carolina State University.</bio>
		<img alt="Ian Shields" height="80" src="http://www.ibm.com/developerworks/i/p-ishields.jpg" width="64"/>
		<author-name>
			<GivenName>Ian</GivenName>
			<FamilyName>Shields</FamilyName>
		</author-name>
		<company-name>IBM developerWorks</company-name>
	</author>

	<date-published month="07" year="2005" day="28"/>
	<date-updated month="10" year="2005" day="24"/>

	<abstract>If you can&apos;t find a validating XML editor you like, or prefer not to take the time now to learn how to use one, you can edit the XML for your developerWorks articles and tutorials using your preferred text editor.  Ian Shields has created some great tools to help you validate, transform, and preview your article or tutorial. This article shows you how easy it is to use those tools on Microsoft Windows or Linux.</abstract>

	<abstract-extended>If you can&apos;t find a validating XML editor you like, or prefer not to take the time now to learn how to use one, you can edit the XML for your developerWorks articles and tutorials using your preferred text editor.  Ian Shields has created some great tools to help you validate, transform, and preview your article or tutorial. This article shows you how easy it is to use those tools on Microsoft<reg/> Windows<reg/> or Linux<reg/>.</abstract-extended>


	<docbody>    
     <heading refname="start" toc="yes" type="major">Getting started</heading>
     
	<p>Creating an article or tutorial for publication on developerWorks involves these steps:

		<ol>
		   <li><b>Download</b> the author package and unzip the file.</li>
			<li><b>Copy</b> the XML template for articles or the XML template for tutorials.</li>
			<li><b>Edit</b> the XML template to add your content,  
			then <b>validate</b> that XML against the schema and correct any errors.</li>
			<li><b>Preview</b> your article or tutorial in a browser 
			to get an idea of how it will appear on developerWorks.</li>
		</ol>
		</p>
			
	<p>Start by reading and completing Step 1 and Step 2 in the article, 
	&quot;<a href="http://www.ibm.com/developerworks/library/i-dwauthors/">Authoring 
	with the developerWorks XML templates</a>.&quot; That article shows 
	you how to download the author package that contains the tools and all 
	files you&apos;ll need.  It also includes tips for composing and submitting your content.</p>
	
	<p>Then return to this article after you have completed Step 1 and Step 2. 
	You will have downloaded the author package, unzipped the contents to 
	your machine, and created a copy of the template using the new-tutorial 
	or new-article tools described in that article. You are now ready to do the 
	remaining steps: edit, validate, and preview your content using the 
	instructions below.</p>

	<heading refname="" toc="yes" type="major">Using Microsoft Windows</heading>

	<p>You will need:
		<ul>
			
			<li>A text editor or word processor that can
			save in plain text format.  Although not necessary, 
			you will find it convenient to have an editor 
			that can display line numbers, because any errors 
			detected in the validation phase will be reported by 
			line number. The Notepad application on Windows XP
			will display line numbers if you select the
			<b>View &gt; Status Bar</b> menu option. Note
			that this option is not available in Notepad
			in earlier versions of Windows.</li>

			<li>The latest version of Microsoft&apos;s XML
			Parser (MSXML), which is contained in MSXML
			4.0 Service Pack 2 (Microsoft XML Core
			Services) at this writing. (To get  the
			parser, see the <a href="#resources">Resources</a> section of
			this article for a link.) Use the link to <b>msxml.msi</b> 
			to install MSXML 4.0 SP2 and the SDK on your 
			computer. You may also save msxml.msi to your 
			local disk for later installation. 
			</li>

			<li>Internet Explorer Version 6 or another Web browser 
			such as Mozilla, Firefox, or Opera.</li>

		</ul>
	</p>
	
	<heading refname="winedit" toc="no" type="minor">Step 1. Edit 
	the XML file</heading> 

	<p>Navigate to your new folder and edit your file
	(<code type="inline">index.xml</code>)
	using your favorite text editor. Notepad will suffice if 
	you don&apos;t have another preferred editor. Follow the detailed 
	comments in the <code type="inline">index.xml</code> template file. 
	They will help you understand what you need to do.
	</p>
	
	<p>
	Be sure to save your file
	as plain text if you are using a word processor. 
	Similarly, if you cut and paste from a file with 
	embedded formatting, such as a Microsoft Word
	file, either use your editor&apos;s capabilities to paste
	(or paste special) as text, or be sure to save your 
	XML file as plain text. Do not change 
	the file name from index.xml, and do not edit the 
	HTML file (index.html) that you may generate using our tools
	as your developerWorks editor will work from the XML version.
	Save any images, such as photos or
	screen shots, in the directory you created for
	your article or tutorial (my-article in our example).</p>
	
	<heading refname="winvalidate" toc="no" type="minor">Step 2. Validate 
	the XML</heading> 

	<p>When editing your article or tutorial, you will need to validate the changes 
	against our schema. If you are new to XML, we suggest 
	validating your file as you go along.  It will help you identify the 
	errors more easily.</p>

	<p>
	A tool for validating your XML was installed in your project directory when you created
	your new article or tutorial.
	 Click the <code type="inline">dw-transform.vbs</code> script in
	your article or tutorial directory. Depending on your Windows settings, 
	this may simply show as <code type="inline">dw-transform</code>. 
	You should see a window like Figure 1.
	</p>

	<figure>
		<heading refname="figure1" toc="no" type="figure">Figure 1. Validating your article
		with the dw-transform script</heading> 
		<img alt="Validating with the dw-transform script" height="93" src="winfig03.gif" width="308"></img>
	</figure>

	<heading refname="winfixprob" toc="no" type="minor">Step 3. Correct 
	validation problems</heading> 
			
	<p>If you happened to make an XML coding error, you
	will see an error output instead.  Using the dw-transform script, 
	you should see a window like Figure 2.
	</p>

	<figure>
		<heading refname="figure2" toc="no" type="figure">Figure 2. An invalid article (VB script checker)
		</heading> <img alt="An invalid article (script checker)" height="202" src="winfig05.gif" width="338"></img>
 	</figure>
			
	<p>In this case, we introduced a deliberate error by including
	<code type="inline">&lt;u&gt;Underlined
	phrase&lt;/u&gt;</code>.  Because links are underlined, we do
	not use underlined text for other purposes in developerWorks articles or tutorials,
	so.the <code type="inline">&lt;u&gt;</code> and <code type="inline">&lt;/u&gt;</code> tags are not permitted by the
	schema.  The tool will identify the location of the first
	error and give a reason for it.  The reasons are generated by
	the MSXML parser. Although they are somewhat cryptic, they
	will usually help you locate the problem. 
	If the reason contains <i>Expecting a, b, br, ...</i> with a long 
	list of other tag names, you&apos;ve probably mistyped a tag name or
	attempted to use a tag that isn&apos;t supported by the developerWorks
	schema (as in our example here). An editor that displays line 
	numbers will help you find errors quickly. See Figure 3.
	</p>

	<figure>
		<heading refname="figure3" toc="no" type="figure">Figure 3. Locating an error in your
		XML with Notepad</heading> 
		<img alt="Locating an   error in your XML with Notepad" height="245" src="winfig06.gif" width="407"></img>
	</figure>

	<p>After you have located and corrected your error, save the
	file and recheck it. If you used dw-xmlcheck.html, click the reload 
	button in IE to recheck. If you used dw-transform.vbs, simply run it 
	again.
	Repeat this process until you have no more errors.</p>
			
	<heading refname="winpreview" toc="no" type="minor">Step 4. Preview 
	your article or tutorial</heading> 

	<p>When you have no errors, you are ready to see a preview of how
	your article or tutorial will look on developerWorks.You should have a file 
	called <code type="inline">index.html</code> in your directory. 
	Open this file with your preferred browser to preview your content.
	If you are using Internet Explorer with Windows XP 
	Service Pack 2, you may see a popup and an information bar advising that
	Internet Explorer has restricted the file from showing active content.
	Click on the information bar and select <b>Allow blocked content...</b>
	in order to preview your article or tutorial. 
	</p>
	
	<figure>
		<heading refname="figure4" toc="no" type="figure">Figure 4. Previewing your
		article</heading> <img alt="Previewing your article" height="349" src="winfig07.gif" width="421"></img>
	</figure>
	
	<p><b>Notes:</b>
	<ul>
		<li>Some of the stylesheets are included by the server, so the formatting in your 
		preview won&apos;t appear exactly as it will when generated by the developerWorks 
		staff and published on the server.</li>
		<li>The final published version of a tutorial will be several separate pages, but the 
		preview shows the tutorial on a single page.  On this single page, you can see 
		where each new section begins. However, cross-links in the left navigation area 
		and body of the tutorial do not work in the preview.  The developerWorks staff will 
		correct the pagination and linking.</li>
	</ul>
	</p>

	<heading refname="winpreview" toc="no" type="minor">Next steps</heading> 
	<p>Congratulations!  You&apos;ve edited, validated, and previewed your article or tutorial.  
	Now, return to &quot;<a href="http://www.ibm.com/developerworks/library/i-dwauthors/#composing">Authoring 
	with the developerWorks XML templates</a>&quot; for tips on finishing and submitting your 
	content to your developerWorks editor.</p>

	<heading alttoc="Using Linux or   another operating system" refname="" toc="yes" 
	type="major">Using Linux or another operating system</heading> 
	
	<p>You will need:
		<ul>
			<li>A text editor or word processor that can
			save in plain text format.  Although not necessary, 
			you will find it convenient to have an editor 
			that can display line numbers, because any errors 
			detected in the validation phase will be reported by 
			line number. Many Linux and UNIX<reg></reg> editors 
			(including <code type="inline">vi</code> and
			<code type="inline">emacs</code>) will display
			line numbers, either always or as a user option.
			</li>

			<li>A Java runtime or development kit, at 1.4 level or greater.
			We recommend using the IBM Runtime Environment for Java 2 
			(JRE) as it includes the necessary Xalan and Xerces functions 
			and can be installed alongside other Java implementations.
			See the <a href="#resources">Resources</a> section of
			this article for download links. 
			If you use another Java runtime or developer kit
			you may also need the Apache Xalan Version 2.6 package 
			(which includes the required Xerces funcitons)
			if it is not included with your Java version. You may also
			need to modify the developerworks/tools/dwxmlxslt.sh script
			or set a CLASSPATH environment variable.
			</li>

			<li>A graphical browser such as Mozilla, Firefox, or Opera.</li>
			
		</ul>
	</p>
	
	<heading refname="linuxedit" toc="no" type="minor">Step 1. Edit 
	your XML file</heading> 

	<p>Navigate to your new folder and edit your XML file 
	using your favorite text editor. Follow the detailed 
	comments in the <code type="inline">index.xml</code> file. Be sure to save your file
	as plain text if you are using a word processor. Do not change 
	the file name from index.xml.  Save any images, such as photos or
	screen shots, in the directory you created for
	your article or tutorial (my-tutorial in our example).</p>
	
	<heading refname="linuxvalidate" toc="no" type="minor">Step 2. Validate 
	your XML</heading> 

	<p>When editing your article or tutorial, you will need to validate the changes 
	against our schema. If you are new to XML, we suggest 
	validating your file as you go along.  It will help you identify the 
	errors more easily.</p>

	<p>The tool for validating your article or tutorial was installed in your 
	directory when you created your new article or new tutorial. 
	Run the <code type="inline">dw-transform.sh</code> script in
	your directory. 
	If you are running the KDE or GNOME desktops, you may run this 
	from a graphical manager, such as Nautilus or Konqueror; otherwise, 
	you should run the script in a terminal window.
	</p>
	
	<p>After a few moments, you should see a message box like Figure 5 
	if all is well.
	</p>

	<figure>
		<heading refname="figure5" toc="no" type="figure">Figure 5. Validating your tutorial
		with the dw-transform shell script</heading> 
		<img alt="Validating with the dw-transform shell script" height="218" src="lnxfig05.gif" width="346"></img>
	</figure>

	<heading refname="linuxfixprob" toc="no" type="minor">Step 3. Correct 
	validation problems</heading> 
			
	<p>If you happened to make an XML coding error, your
	message box will show an error similar to Figure 6. 
	</p>

	<figure>
		<heading refname="figure6" toc="no" type="figure">Figure 6. An invalid tutorial (shell script checker)
		</heading> 
		<img alt="An invalid tutorial (shell script checker)" height="512" src="lnxfig06.gif" width="362"></img>
 	</figure>			
			
	<p>In this case, we introduced a deliberate error by including
	<code type="inline">&lt;u&gt;Underscore error&lt;/u&gt;</code>.  
	Because links are underlined, we do not use underlined text 
	for other purposes in developerWorks articles or tutorials,
	so the <code type="inline">&lt;u&gt;</code> and 
	<code type="inline">&lt;/u&gt;</code> tags are not permitted by the
	schema.  The tool will identify the location of the first
	error and give a reason for it.  The reasons are generated by
	the Java parser. Although they are somewhat cryptic, they
	will usually help you locate the problem. 
	If the reason contains <i>One of &apos;{&quot;&quot; </i> with a long 
	list of other tag names, you&apos;ve probably mistyped a tag name or
	attempted to use a tag that isn&apos;t supported by the developerWorks
	schema (as in our example here). An editor that displays line 
	numbers will help you find errors quickly. See Figure 7.</p>

	<figure>
		<heading refname="figure7" toc="no" type="figure">Figure 7. Locating an error in your
		tutorial with the gedit editor</heading> 
		<img alt="Locating an error in your tutorial with nedit" height="332" src="lnxfig07.gif" width="405"></img>
	</figure>
	
	<p>After you have located and corrected your error, save the
	file and rerun the dw-transform.sh script to recheck your file.
	Repeat this process until you have no more errors.</p>

	<p><b>Notes:</b>
	<ul>
		<li>Some errors, such as a legitimate opening tag without 
		a matching closing tag, may result in an error without a line 
		number. Validate often.
		</li>
		<li>If you use tabs to indent your article or tutorial, the column number 
		shown in your editor may not match the column number reported
		in an error message.
		</li>
	</ul>
	</p>
			
	<heading refname="linuxpreview" toc="no" type="minor">Step 4. Preview 
	your article or tutorial</heading> 

	<p>When you have no more errors, you are ready to see a preview 
	of how your article or tutorial will look on developerWorks. You should have a 
	file called <code type="inline">index.html</code> in your  
	directory. Open this file with your preferred browser to preview 
	your article or tutorial.
	</p>
	
	<figure>
		<heading refname="figure8" toc="no" type="figure">Figure 8. Previewing your
		tutorial</heading> <img alt="Previewing your tutorial" height="382" src="lnxfig08.gif" width="388"></img>
	</figure>
	
	<p><b>Notes:</b>
	<ul>
		<li>Some of the stylesheets are included by the server and so the 
		formatting in your preview won&apos;t appear exactly as it will 
		when generated by the developerWorks staff and published on the server.  </li>
		<li>You may use the left navigation area to navigate between and within 
		sections of you tutorial as the Linux transformation tool produces several 
		html pages similar to those that will be in the final version.</li>
	</ul>
	</p>
	
	<heading refname="winpreview" toc="no" type="minor">Next steps</heading> 
	<p>Congratulations!  You&apos;ve edited, validated, and previewed your article or tutorial.  
	Now, return to &quot;<a href="http://www.ibm.com/developerworks/library/i-dwauthors/#composing">Authoring 
	with the developerWorks XML templates</a>&quot; for tips on finishing and submitting your 
	content to your developerWorks editor.</p>

	</docbody>

	<resources>
	
	<resource resource-category="Learn">
	&quot;<a href="http://www.ibm.com/developerworks/library/i-dwauthors/">Authoring 
	with the developerWorks XML templates</a>&quot; (developerWorks, July 2005): 
	Begin your developerWorks authoring experience with our complete instructions 
	and downloadable authoring package. 
	</resource>
			
	<resource resource-category="Learn">
	&quot;<a href="http://www.ibm.com/developerworks/library/i-dwgraphics/">Illustrating 
	your article or tutorial for developerWorks: Graphic design tips for authors</a>.&quot; 
	(developerWorks, January 2005): Get detailed guidelines and tips on creating and 
	submitting graphics for your article or tutorial.
	</resource>

	<resource resource-category="Learn">
	<a href="http://www.ibm.com/developerworks/aboutdw/author.html">developerWorks 
	author guidelines and editorial policy</a>: Learn more about our editorial policy and 
	peek at each developerWorks editor's content wish list.
	</resource>

	<resource resource-category="Get products and technologies">
	<a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=3144b72b-b4f2-46da-b4b6-c5d7485f2b42&amp;DisplayLang=en">Microsoft's 
	XML Parser (MSXML)</a>: To use the dw-transform.vbs script to transform your article 
	or tutorial, you need the latest version of the MSXML parser. The file you need is msxml.ms.i.
	</resource>

	<resource resource-category="Get products and technologies">
	<a href="http://www-128.ibm.com/developerworks/java/jdk/">IBM Developer Kit for Java, 
	Version 1.4.2</a>: To use the dw-transform.sh script on Linux to transform your article or 
	tutorial, you need the IBM Developer Kit for Java, Version 1.4.2 or later.
	</resource>

	<resource resource-category="Get products and technologies">
	<a href="http://xml.apache.org/xalan-j/index.html">Apache Xalan</a>: If 
	you are using the Linux tools (dw-transform.sh) and not using the IBM 
	Developer Kit for Java, you may need Apache Xalan.
	</resource>

	<resource resource-category="Get products and technologies">
	<a href="http://www.ibm.com/developerworks/downloads/index.html">IBM trial 
	products for download</a>: Build your next development project with IBM trial 
	software, available for download directly from developerWorks.
	</resource>

	<resource resource-category="Discuss">
	<a href="https://www-130.ibm.com/developerworks/secure/myideas.jsp?start=true&amp;domain=developerworks">Content 
	submission form</a>: Submit an article or tutorial idea to developerWorks, and 
	start talking with a developerWorks editor. Check to see what content is most 
	desired in the <a href="http://www.ibm.com/developerworks/wishlist/">content wish list</a>.
	</resource>

	<resource resource-category="Discuss">
	<a href="http://www.ibm.com/developerworks/aboutdw/">developerWorks editor 
	contact info</a>: If you have questions, contact the editor for the technology or 
	product zone you&apos;re interested in.
	</resource>

	</resources>

	</dw-article>
</dw-document>








