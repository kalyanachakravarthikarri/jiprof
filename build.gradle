description = 'JIP is a code profiling tool much like the hprof tool that ships with the JDK'

subprojects {
    apply plugin: 'java'
    apply plugin: 'findbugs'
    apply plugin: 'pmd'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    version = '1.2'

    repositories {
        mavenCentral()
    }

    test.onlyIf {
        !Boolean.getBoolean('skip.tests')
    }

    findbugs {
        ignoreFailures = true
        effort = 'max'
    }

    pmd {
        ignoreFailures = true
        ruleSets = [
                'java-basic',
                'java-braces',
                'java-clone',
                'java-codesize',
                'java-comments',
                'java-controversial',
                'java-design',
                'java-empty',
                'java-finalizers',
                'java-imports',
                'java-j2ee',
                'java-javabeans',
                'java-junit',
                'java-logging-jakarta-commons',
                'java-logging-java',
                'java-migrating',
                'java-naming',
                'java-optimizations',
                'java-strictexception',
                'java-strings',
                'java-sunsecure',
                'java-typeresolution',
                'java-unnecessary',
                'java-unusedcode'
        ]
    }

    tasks.withType(Pmd) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}

project(':jip') {
    dependencies {
        compile fileTree(dir: 'lib', include: '*.jar')
    }
}

project(':jip-test') {
    dependencies {
        testCompile 'junit:junit:4.12'
    }
}

project(':simple-profiler') {
    dependencies {
        compile fileTree(dir: 'lib', include: '*.jar')
    }
}
